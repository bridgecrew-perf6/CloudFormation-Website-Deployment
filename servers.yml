Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to  
    Type: AWS::SSM::Parameter::Value<String>
    Default: EnvironmentName

  LaunchTemplateVersionNumber:
    Description: Version number to asssign to launch templates
    Type: AWS::SSM::Parameter::Value<String>
    Default: LaunchTemplateVersionNumber

  MyKey:
    Description: Key to use in authentication
    Type: AWS::SSM::Parameter::Value<String>
    Default: MyKey
  
  AMIToUse:
    Description: AMI to use in launching instances 
    Type: AWS::SSM::Parameter::Value<String>
    Default: AMIToUse

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http traffic to our load balancer
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow htttp traffic to our hosts and ssh from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
  
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess

  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref IAMRole

  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref AMIToUse
        InstanceType: t2.medium
        SecurityGroupIds:
        - !GetAtt WebServerSecGroup.GroupId
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs: 
            VolumeSize: '10'
        IamInstanceProfile: 
          Arn: !GetAtt IAMInstanceProfile.Arn
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install -y apache2
            sudo systemctl start apache2.service
            sudo apt install -y awscli
            cd /var/www/html
            sudo aws s3 sync s3://my-820783452552-temps .
  
  WebAppScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PRIV-NETS
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version:  !Ref LaunchTemplateVersionNumber
      MinSize: '1'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups: 
      - !Ref LBSecGroup
      Subnets:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SN
        - Fn::ImportValue: !Sub ${EnvironmentName}-PUB2-SN
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
  
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/] 
      ListenerArn: !Ref Listener
      Priority: 1
  
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckPath:  /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID

  BastionServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow htttp traffic to our hosts and ssh from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  BastionServer1:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref MyKey
      ImageId: ami-0cff7528ff583bf9a
      InstanceType: t2.micro
      SecurityGroupIds:
      - !Ref BastionServerSecGroup
      SubnetId: 
        Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB1-SN
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Bastion Server
  
  BastionServer2:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref MyKey
      ImageId: ami-0cff7528ff583bf9a
      InstanceType: t2.micro
      SecurityGroupIds:
      - !Ref BastionServerSecGroup
      SubnetId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB2-SN
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Bastion Server

Outputs:
  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref WebAppLB
    Export: 
      Name: !Sub ${EnvironmentName}-LB

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: 
      Fn::Join: [ "", [ "http://", !GetAtt WebAppLB.DNSName ] ]
    Export:
      Name: !Sub ${EnvironmentName}-LB-URL
  
  TargetGroup:
    Description: Provides information about the target Group
    Value: !Ref WebAppTargetGroup
    Export: 
      Name: !Sub ${EnvironmentName}-TG-GRP
  
  ScalingGroup:
    Description: Information about the scaling group
    Value: !Ref WebAppScalingGroup
    Export: 
      Name: !Sub ${EnvironmentName}-SC-GRP